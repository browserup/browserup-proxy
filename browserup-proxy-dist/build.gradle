/*
 * Modifications Copyright (c) 2019 BrowserUp, Inc.
 */

plugins {
    id 'application'
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            if (project.hasProperty("ossrhUsername") && project.hasProperty("ossrhPassword")) {
                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }
            }

            addFilter('distribution') {artifact, file ->
                file.name.contains('.zip') || file.name.contains('.tar')
            }
            pom('distribution').artifactId = 'browserup-proxy'
            pom('distribution').project {
                name 'browserup-proxy'
                description 'BrowserUp Proxy'
                url 'https://github.com/browserup/browserup-proxy'

                scm {
                    connection 'scm:git:git@github.com:browserup/browserup-proxy.git'
                    developerConnection 'scm:git:git@github.com:browserup/browserup-proxy.git'
                    url 'https://github.com/browserup/browserup-proxy'
                }

                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id 'browserup'
                        name 'BrowserUp, Inc.'
                        email 'developers@browserup.com'
                    }
                }
            }

            addFilter('distribution') {artifact, file ->
                file.name.endsWith('.zip') || file.name.endsWith('.tar')
            }
            pom('distribution').artifactId = 'browserup-proxy'
        }
    }
}

dependencies {
    implementation project(':browserup-proxy-core')
    implementation project(':browserup-proxy-rest')

    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.9.8'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.9.8'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.8'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.8'
    implementation 'com.google.inject:guice:4.2.2'
    implementation 'com.google.inject.extensions:guice-servlet:4.2.2'
    implementation 'com.google.inject.extensions:guice-multibindings:4.2.2'
    implementation 'com.google.sitebricks:sitebricks:0.8.11'
    implementation 'org.apache.logging.log4j:log4j-api:2.11.2'
    implementation 'org.apache.logging.log4j:log4j-core:2.11.2'
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.11.2'
    implementation 'org.eclipse.jetty:jetty-server:9.4.18.v20190429'
    implementation 'org.eclipse.jetty:jetty-servlet:9.4.18.v20190429'
    implementation 'org.javassist:javassist:3.25.0-GA'
}

applicationName = 'browserup-proxy'
mainClassName = 'com.browserup.bup.proxy.Main'

distributions {
    main {
        baseName = 'browserup-proxy'
        contents {
            from '../LICENSE'
            from '../README.md'
            into ('ssl') {
                from '../browserup-proxy-core/src/main/resources/sslSupport'
            }
        }
    }
}
